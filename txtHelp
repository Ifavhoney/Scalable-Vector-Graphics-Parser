 /*How to initialize every Circle
        Circle *circle = NULL;
        circle = createCircleObject(1,2,3, "ss", otherAttributes);
    
    //Free circle
        free(circle);
//Freeing an otherAttribute
    freeList(otherAttributes);

//Make sure to free attributes outside
    deleteAttribute(value);

   Attribute *otherValue = NULL;
    otherValue = malloc(sizeof(Attribute));
    
    otherValue = (Attribute *) otherAttributes -> head -> data;
    printf("%s", otherValue -> name);
    //Turning paths into readable data
        Path* path = (Path *) list -> paths -> head -> next -> data;    
            Attribute *attribute = path -> otherAttributes -> head -> data;
            printf("%s", attribute -> value);

//Units
        temp = calloc(1, strlen(getAttrValue) + 1);
             strcpy(temp, getAttrValue);
             char *end;
             width = strtof(temp, &end);
             if(units == NULL){
             units = calloc(1, strlen(getAttrValue) + 1);
             strcpy(units, end);
                printf("%s", units);
             }
             free(temp);
                
            

            // Printing parsed float values of f1 and f2
            printf("%.2f\n%s\n", ourValue, unit);
            
    

            
        
           
        

    //can rely on deleteCircle, deleteAttribute
    //Never call deleteAttribute when you have freeList and if theres a gap of insertback memory leak will occure